{"version":3,"sources":["redux/contacts/contacts-actionTypes.js","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-actions.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["ADD_CONTACT","DELETE_CONTACT","FILTER_CONTACTS","connect","state","contacts","items","dispatch","addContact","name","number","type","contactsTypes","payload","id","uuidv4","contactsActions","useState","setName","setNumber","onSubmit","e","preventDefault","find","contact","alert","className","value","pattern","title","required","onChange","target","filter","names","item","toLowerCase","includes","onDelete","contactID","map","onClick","App","initialContactsState","combineReducers","actionTypes","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5e694ba.chunk.js","sourcesContent":["export const ADD_CONTACT = 'contacts/Add';\nexport const DELETE_CONTACT = 'contacts/Delete';\nexport const FILTER_CONTACTS = 'contacts/Filter';","import \"./ContactForm.css\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as contactsActions from \"../../redux/contacts/contacts-actions\"\n\n function ContactForm({contacts, addContact}) {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n     const handleNameChange = e => {\n         setName(e.target.value);\n     };\n\n     const handleNumberChange = e => {\n         setNumber(e.target.value);\n     };\n     \n     const onSubmit = (name, number) => {\n         const duplicateName = contacts.find(contact => contact.name === name);\n         duplicateName ? alert(`${name} is already in contacts`) : addContact(name, number);\n     };\n\n     const handleSubmit = e => {\n         e.preventDefault();\n         onSubmit(name, number);\n         setName('');\n         setNumber('');\n     };\n     \n    return (\n        <form onSubmit={handleSubmit} className=\"ContactForm\">\n            <p>Name</p>\n            <label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    onChange={handleNameChange}\n\n                />\n            </label>\n\n            <p>Number</p>\n            <label>\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    onChange={handleNumberChange}\n                />\n            </label>\n            <button type=\"submit\" className=\"ContactForm__button\">Add contact</button>\n        </form>\n    )\n }\n\nconst mapStateToProps = state => ({\n    contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    addContact: (name, number) => dispatch(contactsActions.addContact(name, number)) \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import * as contactsTypes from './contacts-actionTypes';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addContact = (name, number) => ({\n    type: contactsTypes.ADD_CONTACT,\n    payload: {\n        id: uuidv4(),\n        name,\n        number,\n    },\n});\n\nexport const deleteContact = contactId => ({\n    type: contactsTypes.DELETE_CONTACT,\n    payload: contactId,\n});\n\nexport const filterContacts = value => ({\n    type: contactsTypes.FILTER_CONTACTS,\n    payload: value,\n});","import { connect } from \"react-redux\";\nimport * as contactActions from \"../../redux/contacts/contacts-actions\";\n\n\nfunction Filter({filter, onChange }) {\n    return (\n        <>\n            <p>Find contacts by name</p>\n            <label>\n                <input\n                    type=\"text\"\n                    name=\"filter\"\n                    value={filter}\n                    onChange={onChange}\n                />\n            </label>\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.contacts.filter\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onChange: e => dispatch(contactActions.filterContacts(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\n","import \"./ContactList.css\";\nimport { connect } from \"react-redux\";\nimport * as contactActions from \"../../redux/contacts/contacts-actions\";\n\nfunction ContactList({ names, onDelete }) {\n    return (\n        <ul className=\"ContactList\">\n            {names.map(contact => {\n                return (\n                    <li key={contact.id} className=\"ContactList__item\">\n                        <p>{contact.name}: {contact.number}</p>\n                        <button onClick={() => onDelete(contact.id)}>Delete</button>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n\nconst mapStateToProps = state => {\n\n  const { filter, items } = state.contacts;\n  const filteredNames = items.filter(item => item.name.toLowerCase().includes(filter.toLowerCase()));\n\n    return {\n        names: filteredNames,\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onDelete: contactID => dispatch(contactActions.deleteContact(contactID))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","// import { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\n\nfunction App() {   \n  \n  return (\n    <div className=\"Container\">\n\n      <ContactForm />\n\n      <h2>Contacts</h2>\n\n      <Filter />\n\n      <ContactList />\n\n    </div>\n  );\n}\n\n\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport * as actionTypes from \"./contacts-actionTypes\";\n\nconst initialContactsState = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\n\nconst itemsReducer = (state = initialContactsState, { type, payload }) => {\n    switch (type) {\n        case actionTypes.ADD_CONTACT:\n            return [...state, payload];\n\n        case actionTypes.DELETE_CONTACT:\n            return state.filter(({ id }) => id !== payload);\n\n        default:\n            return state;\n\n    }\n};\n\nconst filterReducer = (state = '', { type, payload }) => {\n    switch (type) {\n        case actionTypes.FILTER_CONTACTS:\n            return payload;\n\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    items: itemsReducer,\n    filter: filterReducer,\n});","import { createStore, combineReducers } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from \"./contacts/contacts-reducer\";\n\n\nconst rootReducer = combineReducers({\n    contacts: contactsReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}