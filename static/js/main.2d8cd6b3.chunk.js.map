{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","redux/contacts/contacts-actionTypes.js","App.jsx","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","e","preventDefault","className","type","value","pattern","title","required","onChange","target","Filter","ContactList","names","onDelete","map","contact","onClick","id","ADD_CONTACT","DELETE_CONTACT","FILTER_CONTACTS","connect","state","contacts","items","filter","dispatch","createContact","contactsTypes","payload","contactsActions","deleteContact","contactId","filterContact","filteredNames","toLowerCase","includes","toLocaleLowerCase","addContact","uuidv4","find","alert","initialContactsState","combineReducers","actionTypes","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d8cd6b3.chunk.js","sourcesContent":["import \"./ContactForm.css\";\nimport { useState } from \"react\";\n\nexport default function ContactForm({ onSubmit }) {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleNameChange = e => {\n        setName(e.target.value);\n    }\n\n    const handleNumberChange = e => {\n        setNumber(e.target.value);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit(name, number);\n        setName('');\n        setNumber('');\n    }\n    return (\n        <form onSubmit={handleSubmit} className=\"ContactForm\">\n            <p>Name</p>\n            <label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    onChange={handleNameChange}\n\n                />\n            </label>\n\n            <p>Number</p>\n            <label>\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    onChange={handleNumberChange}\n                />\n            </label>\n            <button type=\"submit\" className=\"ContactForm__button\">Add contact</button>\n        </form>\n    )\n}","export default function Filter({ value, onChange }) {\n    return (\n        <>\n            <p>Find contacts by name</p>\n            <label>\n                <input\n                    type=\"text\"\n                    name=\"filter\"\n                    value={value}\n                    onChange={onChange}\n                />\n            </label>\n        </>\n    )\n}","import \"./ContactList.css\";\n\nexport default function ContactList({ names, onDelete }) {\n    return (\n        <ul className=\"ContactList\">\n            {names.map(contact => {\n                return (\n                    <li key={contact.id} className=\"ContactList__item\">\n                        <p>{contact.name}: {contact.number}</p>\n                        <button onClick={() => onDelete(contact.id)}>Delete</button>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}","export const ADD_CONTACT = 'contacts/Add';\nexport const DELETE_CONTACT = 'contacts/Delete';\nexport const FILTER_CONTACTS = 'contacts/Filter';","import { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport { connect } from 'react-redux';\nimport * as contactsActions from './redux/contacts/contacts-actions';\n\n\nfunction App({ contacts, filter, createContact, deleteContact, filterContact }) {\n  \n  const handleFilterChange = e => {\n    filterContact(e.target.value)\n  };\n\n  const formSubmitHandler = (name, number) => {\n    const duplicateName = contacts.find(contact => contact.name === name);\n    duplicateName ? alert(`${name} is already in contacts`) : addContact(name, number);\n  };\n\n  const getfilteredNames = () => {\n    return (\n      contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLocaleLowerCase()))\n    )\n  };\n\n  const filteredNames = getfilteredNames();\n\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number\n    };\n    \n    createContact(contact);\n  };\n\n \n  \n  return (\n    <div className=\"Container\">\n\n      <ContactForm onSubmit={formSubmitHandler} />\n\n      <h2>Contacts</h2>\n\n      <Filter value={filter} onChange={handleFilterChange} />\n\n      <ContactList names={filteredNames}  onDelete={deleteContact}/>\n\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts.items,\n    filter: state.contacts.filter,\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  createContact: contact => dispatch(contactsActions.addContact(contact)),\n  deleteContact: contactId => dispatch(contactsActions.deleteContact(contactId)),\n  filterContact: value => dispatch(contactsActions.filterContacts(value)),\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","import * as contactsTypes from './contacts-actionTypes';\n\nexport const addContact = contact => ({\n    type: contactsTypes.ADD_CONTACT,\n    payload: contact,\n});\n\nexport const deleteContact = contactId => ({\n    type: contactsTypes.DELETE_CONTACT,\n    payload: contactId,\n});\n\nexport const filterContacts = value => ({\n    type: contactsTypes.FILTER_CONTACTS,\n    payload: value,\n})","import { combineReducers } from \"redux\";\nimport * as actionTypes from \"./contacts-actionTypes\";\n\nconst initialContactsState = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];       \n    \n\nconst itemsReducer = (state = initialContactsState, { type, payload }) => {\n    switch (type) {\n        case actionTypes.ADD_CONTACT:\n            return [...state, payload];            \n        \n        case actionTypes.DELETE_CONTACT:\n            return state.filter(contact => contact.id !== payload);            \n    \n        default:\n            return state;\n            \n    }\n};\n\nconst filterReducer = (state = '', { type, payload }) => {\n    switch (type) {\n        case actionTypes.FILTER_CONTACTS:\n            return state = payload;            \n    \n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    items: itemsReducer,\n    filter: filterReducer,\n})","import { createStore, combineReducers } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from \"./contacts/contacts-reducer\";\n\n\n\nconst rootReducer = combineReducers({\n    contacts: contactsReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}